#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
#define M 1000000000+7
long long pow(int a, int b, int MOD) //O(logN);
{
    long long x=1,y=a; 
    while(b > 0){
        if(b%2 == 1){
            x=(x*y);
            x%=MOD;
        }
        y = (y*y);
        y%=MOD; 
        b /= 2;
    }
    return x;
}
long long InverseEuler(int n, int MOD)
{
    return pow(n,MOD-2,MOD);
}
long long C(int n, int r, int MOD)
{
    vector<long long> f(n + 1,1);
    for (int i=2; i<=n;i++){
        f[i]= (f[i-1]*i) % MOD;
    }
    return (f[n]*((InverseEuler(f[r], MOD) * InverseEuler(f[n-r], MOD)) % MOD)) % MOD;
}
int main(){
    int n;
    cin>>n;
    for(int i=0; i<n; i++){
        int r,c;
        cin>>r>>c;
        cout<<C(r+c,c,M)<<endl;
    }
    return 0;
}
